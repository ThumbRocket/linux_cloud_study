# 실행중인 Docker 종료
docker stop poll_web poll_app postgres

# docker compose 설치
sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
sudo curl \
    -L https://raw.githubusercontent.com/docker/compose/1.29.2/contrib/completion/bash/docker-compose \
    -o /etc/bash_completion.d/docker-compose
source ~/.bashrc

## 주요 변수들 환경변수로 입력 받기
# Django config 수정하기 
# projects/Django-Poll-App/pollme/settings.py
"""
import os

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('POSTGRES_DB'),
        'USER': os.environ.get('POSTGRES_USER'),
        'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),
        'HOST': os.environ.get('POSTGRES_HOST'),
        'PORT': '5432',
    }
}
"""

# poll_app 이미지 새로 생성하기
docker build --tag poll_app . 

# docker-compose.yml 작성
vim docker-compose.yml
"""
version: "3"
   
services:
  db:
    image: postgres
    volumes:
      - poll-db-volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=poll
      - POSTGRES_USER=fast
      - POSTGRES_PASSWORD=1234qwer

  app:
    image: poll_app
    environment:
      - POSTGRES_DB=poll
      - POSTGRES_USER=fast
      - POSTGRES_PASSWORD=1234qwer
      - POSTGRES_HOST=db
    depends_on:
      - db
    
  web:
    image: poll_web
    ports:
      - "80:80"
    depends_on:
      - app

volumes:
  poll-db-volume:
    external: true
    name:
      poll-db-volume

"""

# docker compose 구동
docker-compose up

# 브라우저로 앱 정상 동작여부 확인 --> 실패

# nginx/config/nginx.conf 수정하기 
"""
        location / {
            # 실습에서는 host의 private ip 사용 ($ ip address show eth0)
            proxy_pass              http://app:8000;  
            proxy_set_header        Host $host;
        }
"""

# nginx image 빌드 
docker build --tag poll_web -f nginx/Dockerfile .

# docker compose 시작 
docker-compose up

# 브라우즈로 앱 정상 동작여부 확인 --> 성공

