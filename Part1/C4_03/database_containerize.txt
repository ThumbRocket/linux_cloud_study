# 폴 서비스 데이터베이스용 볼륨 생성
docker volume create poll-db-volume
docker volume ls
docker volume inspect poll-db-volume

$$ 권한 문제가 발생하는 경우
sudo groupadd docker
sudo usermod -aG docker $USER
newgrp docker

# Postgresql 데이터베이스 컨테이너 실행
docker run -p 5432:5432 --rm --name poll_db \
-v poll-db-volume:/var/lib/postgresql/data \
-e POSTGRES_PASSWORD=1234qwer \
-e POSTGRES_USER=fast \
-e POSTGRES_DB=poll \
-d postgres

# psql client 로 Database 접속해 보기
sudo apt install -y postgresql-client
psql -h 127.0.0.1 -U fast -d poll
## poll=# \du

# Django config 수정하기 (sql 데이터의 저장 위치와 dbengine를 변경)
# projects/Django-Poll-App/pollme/settings.py
"""
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql', (sql 데이터의 저장 위치와 dbengine를 변경)
        'NAME': 'poll',
        'USER': 'fast',
        'PASSWORD': '1234qwer',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}
"""

# postgres database 연결 모듈 설치
# projects/Django-Poll-App/requirements.txt 에 아래 내용 추가
psycopg2==2.9.3

# OS 종속성 필요한 패키지 설치
sudo apt install -y libpq-dev python-dev

# postgresql 클라이언트 패키지 설치 
pip3 install -r requirements.txt

# 데이터베이스 스키마 생성
python3 manage.py migrate

# 어드민 메뉴 사용에 필요한 관리자 계정 생성
python3 manage.py createsuperuser

# Dummy data 생성
pip3 install faker
python3 manage.py shell
import seeder
seeder.seed_all(30)

# 로컬 서버 구동
python3 manage.py runserver

